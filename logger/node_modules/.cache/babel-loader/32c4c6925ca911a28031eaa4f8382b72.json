{"ast":null,"code":"import { SET_LOADING, GET_DEVELOPER, DEVELOPER_ERROR, ADD_DEVELOPER, DELETE_DEVELOPER } from './types'; // Action to get logs\n\nexport const getDevelopers = () => async dispatch => {\n  try {\n    // Set Loading To True\n    setLoading(); // Fetch from api\n\n    const res = await fetch('/developers');\n    const data = await res.json(); // Dispatch\n\n    dispatch({\n      type: GET_DEVELOPER,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: DEVELOPER_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Action to add a log\n\nexport const addDeveloper = log => async dispatch => {\n  try {\n    // Set Loading To True\n    setLoading(); // Fetch from api\n\n    const res = await fetch('/developers', {\n      method: 'POST',\n      body: JSON.stringify(developer),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json(); // Dispatch\n\n    dispatch({\n      type: ADD_DEVELOPER,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: DEVELOPER_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Action to delete a log\n\nexport const deleteDeveloper = id => async dispatch => {\n  try {\n    // Set Loading To True\n    setLoading(); // Fetch from api\n\n    await fetch(`/developers/${id}`, {\n      method: 'DELETE'\n    }); // Dispatch\n\n    dispatch({\n      type: DELETE_DEVELOPER,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: DEVELOPER_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Set Loading To True\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/actions/developerActions.js"],"names":["SET_LOADING","GET_DEVELOPER","DEVELOPER_ERROR","ADD_DEVELOPER","DELETE_DEVELOPER","getDevelopers","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addDeveloper","log","method","body","JSON","stringify","developer","headers","deleteDeveloper","id"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,eAArC,EAAsDC,aAAtD,EAAqEC,gBAArE,QAA6F,SAA7F,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAClD,MAAI;AACA;AACAC,IAAAA,UAAU,GAFV,CAGA;;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CALA,CAMA;;AACAL,IAAAA,QAAQ,CAAC;AACTM,MAAAA,IAAI,EAAEX,aADG;AAETY,MAAAA,OAAO,EAAEH;AAFA,KAAD,CAAR;AAIH,GAXD,CAWE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEV,eADD;AAELW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMM,YAAY,GAAIC,GAAD,IAAS,MAAMX,QAAN,IAAmB;AACpD,MAAI;AACA;AACAC,IAAAA,UAAU,GAFV,CAGA;;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AACnCS,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,SAAf,CAF6B;AAGnCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH0B,KAAhB,CAAvB;AAOA,UAAMb,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAXA,CAYA;;AACAL,IAAAA,QAAQ,CAAC;AACTM,MAAAA,IAAI,EAAET,aADG;AAETU,MAAAA,OAAO,EAAEH;AAFA,KAAD,CAAR;AAIH,GAjBD,CAiBE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEV,eADD;AAELW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAxBM,C,CA0BP;;AACA,OAAO,MAAMc,eAAe,GAAIC,EAAD,IAAQ,MAAMnB,QAAN,IAAmB;AACtD,MAAI;AACA;AACAC,IAAAA,UAAU,GAFV,CAGA;;AACA,UAAME,KAAK,CAAE,eAAcgB,EAAG,EAAnB,EAAsB;AAC7BP,MAAAA,MAAM,EAAE;AADqB,KAAtB,CAAX,CAJA,CAOA;;AACAZ,IAAAA,QAAQ,CAAC;AACTM,MAAAA,IAAI,EAAER,gBADG;AAETS,MAAAA,OAAO,EAAEY;AAFA,KAAD,CAAR;AAIH,GAZD,CAYE,OAAOX,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEV,eADD;AAELW,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAnBM,C,CAqBP;;AACA,OAAO,MAAMH,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHK,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { SET_LOADING, GET_DEVELOPER, DEVELOPER_ERROR, ADD_DEVELOPER, DELETE_DEVELOPER } from './types';\n\n// Action to get logs\nexport const getDevelopers = () => async dispatch =>  {\n    try {\n        // Set Loading To True\n        setLoading();\n        // Fetch from api\n        const res = await fetch('/developers');\n        const data = await res.json();\n        // Dispatch\n        dispatch({\n        type: GET_DEVELOPER,\n        payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: DEVELOPER_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Action to add a log\nexport const addDeveloper = (log) => async dispatch =>  {\n    try {\n        // Set Loading To True\n        setLoading();\n        // Fetch from api\n        const res = await fetch('/developers', {\n            method: 'POST',\n            body: JSON.stringify(developer),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n        // Dispatch\n        dispatch({\n        type: ADD_DEVELOPER,\n        payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: DEVELOPER_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Action to delete a log\nexport const deleteDeveloper = (id) => async dispatch =>  {\n    try {\n        // Set Loading To True\n        setLoading();\n        // Fetch from api\n        await fetch(`/developers/${id}`, {\n            method: 'DELETE'\n        });\n        // Dispatch\n        dispatch({\n        type: DELETE_DEVELOPER,\n        payload: id\n        })\n    } catch (err) {\n        dispatch({\n            type: DEVELOPER_ERROR,\n            payload: err.response.data\n        })\n    }\n};\n\n// Set Loading To True\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}