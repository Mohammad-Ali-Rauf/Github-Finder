{"ast":null,"code":"var _jsxFileName = \"/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/components/logs/Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = _ref => {\n  _s();\n\n  let {\n    log: {\n      logs,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"Developer Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No Developer Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Logs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Logs;\nLogs.propTypes = {\n  log: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect()(Logs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/components/logs/Logs.js"],"names":["React","useEffect","connect","LogItem","Preloader","PropTypes","getLogs","Logs","log","logs","loading","length","map","id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAP,GAA+B;AAEzCT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAGI,OAAH,EAAY;AACR,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,CAACA,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,gBACG;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAGGF,IAAI,CAACG,GAAL,CAASJ,GAAG,iBAAI,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACK,EAAlB;AAAA;AAAA;AAAA;AAAA,YAAhB,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvBD;;GAAMN,I;;KAAAA,I;AAyBNA,IAAI,CAACO,SAAL,GAAiB;AACbN,EAAAA,GAAG,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AADT,CAAjB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,GAAG,EAAEU,KAAK,CAACV;AADmB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,GAAGK,IAAH,CAAtB","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({ log: { logs, loading } }) => {\n\n    useEffect(() => {\n        getLogs();\n        // eslint-disable-next-line\n    }, [])\n\n    if(loading) {\n        return <Preloader />;\n    }\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className='center'>Developer Logs</h4>\n            </li>\n            {!loading && logs.length === 0 ? (\n                <p className='center'>No Developer Logs</p>\n            ) : (\n                logs.map(log => <LogItem key={log.id} log={log}  />)\n            ) }\n        </ul>\n    )\n};\n\nLogs.propTypes = {\n    log: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    log: state.log\n})\n\nexport default connect()(Logs);"]},"metadata":{},"sourceType":"module"}