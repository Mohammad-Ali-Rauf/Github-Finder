{"ast":null,"code":"var _jsxFileName = \"/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/components/logs/Logs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logs = () => {\n  _s();\n\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch('/logs');\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"Developer Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No Developer Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Logs, \"ZGhkABdExOczY9obwOnN8RHRH3E=\");\n\n_c = Logs;\nexport default Logs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"sources":["/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/components/logs/Logs.js"],"names":["React","useEffect","useState","LogItem","Preloader","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","log","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAY;AACxBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAPD;;AASA,MAAGD,OAAH,EAAY;AACR,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIK,CAACA,OAAD,IAAYF,IAAI,CAACS,MAAL,KAAgB,CAA5B,gBACG;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAGGT,IAAI,CAACU,GAAL,CAASC,GAAG,iBAAI,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,YAAhB,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlCD;;GAAMb,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\n\nconst Logs = () => {\n    const [logs, setLogs] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getLogs();\n        // eslint-disable-next-line\n    }, [])\n\n    const getLogs = async () => {\n        setLoading(true);\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        setLogs(data);\n        setLoading(false);\n    }\n\n    if(loading) {\n        return <Preloader />;\n    }\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className='center'>Developer Logs</h4>\n            </li>\n            {!loading && logs.length === 0 ? (\n                <p className='center'>No Developer Logs</p>\n            ) : (\n                logs.map(log => <LogItem key={log.id} log={log}  />)\n            ) }\n        </ul>\n    )\n};\n\nexport default Logs;"]},"metadata":{},"sourceType":"module"}