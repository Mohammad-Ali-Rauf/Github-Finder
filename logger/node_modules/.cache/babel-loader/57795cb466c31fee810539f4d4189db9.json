{"ast":null,"code":"import { SET_LOADING, GET_DEVELOPER, ADD_DEVELOPER, DELETE_DEVELOPER, DEVELOPER_ERROR } from '../actions/types';\nconst initialState = {\n  developers: null,\n  loading: false,\n  error: null\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DEVELOPER:\n      return { ...state,\n        developers: action.payload,\n        loading: false\n      };\n\n    case ADD_DEVELOPER:\n      return {\n        logs: [...state.developers, action.payload],\n        loading: false\n      };\n\n    case DELETE_DEVELOPER:\n      return { ...state,\n        developers: state.developers.filter(developer => developer.id !== action.payload),\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case DEVELOPER_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/reducers/developerReducer.js"],"names":["SET_LOADING","GET_DEVELOPER","ADD_DEVELOPER","DELETE_DEVELOPER","DEVELOPER_ERROR","initialState","developers","loading","error","state","action","type","payload","logs","filter","developer","id"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,gBAApD,EAAsEC,eAAtE,QAA6F,kBAA7F;AAEA,MAAMC,YAAY,GAAI;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFhB;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,aAAL;AACI,aAAO;AACHW,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACH,UAAV,EAAsBI,MAAM,CAACE,OAA7B,CADH;AAEHL,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,gBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,CAAiBQ,MAAjB,CAAwBC,SAAS,IAAIA,SAAS,CAACC,EAAV,KAAiBN,MAAM,CAACE,OAA7D,CAFT;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKP,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKH,eAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOH,KAAP;AA7BR;AA+BH,CAhCD","sourcesContent":["import { SET_LOADING, GET_DEVELOPER, ADD_DEVELOPER, DELETE_DEVELOPER, DEVELOPER_ERROR } from '../actions/types';\n\nconst initialState =  {\n    developers: null,\n    loading: false,\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DEVELOPER:\n            return {\n                ...state,\n                developers: action.payload,\n                loading: false\n            }\n        case ADD_DEVELOPER:\n            return {\n                logs: [...state.developers, action.payload],\n                loading: false\n            }\n        case DELETE_DEVELOPER:\n            return {\n                ...state,\n                developers: state.developers.filter(developer => developer.id !== action.payload),\n                loading: false\n            }\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case DEVELOPER_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}