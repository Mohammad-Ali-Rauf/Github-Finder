{"ast":null,"code":"import { GET_DEVELOPER, ADD_DEVELOPER, DELETE_DEVELOPER, DEVELOPER_ERROR } from '../actions/types';\nconst initialState = {\n  developer: null,\n  loading: false,\n  error: null\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_DEVELOPER:\n      return { ...state,\n        developer: action.payload,\n        loading: false\n      };\n\n    case ADD_DEVELOPER:\n      return {\n        developer: [...state.developer, action.payload],\n        loading: false\n      };\n\n    case DELETE_DEVELOPER:\n      return { ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/reducers/developerReducer.js"],"names":["GET_DEVELOPER","ADD_DEVELOPER","DELETE_DEVELOPER","DEVELOPER_ERROR","initialState","developer","loading","error","state","action","type","payload","logs","filter","log","id"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,gBAAvC,EAAyDC,eAAzD,QAAgF,kBAAhF;AAEA,MAAMC,YAAY,GAAI;AAClBC,EAAAA,SAAS,EAAE,IADO;AAElBC,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;AAMA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,SAAS,EAAEI,MAAM,CAACE,OAFf;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,aAAL;AACI,aAAO;AACHI,QAAAA,SAAS,EAAE,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBI,MAAM,CAACE,OAA5B,CADR;AAEHL,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,gBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHI,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWC,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWN,MAAM,CAACE,OAA3C,CAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAnBR;AAqBH,CAtBD","sourcesContent":["import { GET_DEVELOPER, ADD_DEVELOPER, DELETE_DEVELOPER, DEVELOPER_ERROR } from '../actions/types';\n\nconst initialState =  {\n    developer: null,\n    loading: false,\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DEVELOPER:\n            return {\n                ...state,\n                developer: action.payload,\n                loading: false\n            }\n        case ADD_DEVELOPER:\n            return {\n                developer: [...state.developer, action.payload],\n                loading: false \n            }\n        case DELETE_DEVELOPER:\n            return {\n                ...state,\n                logs: state.logs.filter(log => log.id !== action.payload),\n                loading: false\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}