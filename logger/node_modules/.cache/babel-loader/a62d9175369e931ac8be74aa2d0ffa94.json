{"ast":null,"code":"import { GET_DEVELOPER, ADD_DEVELOPER, DELETE_DEVELOPER, DEVELOPER_ERROR, SET_LOADING } from './types'; // Action to get developers\n\nexport const getDevelopers = () => async dispatch => {\n  try {\n    // Set Loading To True\n    setLoading(); // Fetch from api\n\n    const res = await fetch('/developer');\n    const data = await res.json(); // Dispatch\n\n    dispatch({\n      type: GET_DEVELOPER,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: DEVELOPER_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Action to add a developer\n\nexport const addDeveloper = developer => async dispatch => {\n  try {\n    // Set Loading To True\n    setLoading(); // Fetch from api\n\n    const res = await fetch('/developer', {\n      method: 'POST',\n      body: JSON.stringify(developer),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json(); // Dispatch\n\n    dispatch({\n      type: ADD_DEVELOPER,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: DEVELOPER_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Action to delete a developer\n\nexport const deleteDeveloper = id => async dispatch => {\n  try {\n    // Set Loading To True\n    setLoading(); // Fetch from api\n\n    await fetch(`/developer/${id}`, {\n      method: 'DELETE'\n    }); // Dispatch\n\n    dispatch({\n      type: DELETE_DEVELOPER,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: DEVELOPER_ERROR,\n      payload: err.response.msg\n    });\n  }\n}; // Set Loading To True\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/mohammadali/Documents/GitHub/React-Projects-Ali/logger/src/actions/developerActions.js"],"names":["GET_DEVELOPER","ADD_DEVELOPER","DELETE_DEVELOPER","DEVELOPER_ERROR","SET_LOADING","getDevelopers","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addDeveloper","developer","method","body","JSON","stringify","headers","deleteDeveloper","id","msg"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,gBAAvC,EAAyDC,eAAzD,EAA0EC,WAA1E,QAA6F,SAA7F,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAClD,MAAI;AACA;AACAC,IAAAA,UAAU,GAFV,CAGA;;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CALA,CAMA;;AACAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ,aADD;AAELa,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAXD,CAWE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET,eADD;AAELU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMM,YAAY,GAAIC,SAAD,IAAe,MAAMX,QAAN,IAAmB;AAC1D,MAAI;AACA;AACAC,IAAAA,UAAU,GAFV,CAGA;;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAD,EAAe;AAClCS,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAF4B;AAGlCK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHyB,KAAf,CAAvB;AAOA,UAAMZ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAXA,CAYA;;AACAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEX,aADD;AAELY,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAjBD,CAiBE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET,eADD;AAELU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAxBM,C,CA0BP;;AACA,OAAO,MAAMa,eAAe,GAAIC,EAAD,IAAQ,MAAMlB,QAAN,IAAmB;AACtD,MAAI;AACA;AACAC,IAAAA,UAAU,GAFV,CAGA;;AACA,UAAME,KAAK,CAAE,cAAae,EAAG,EAAlB,EAAqB;AAC5BN,MAAAA,MAAM,EAAE;AADoB,KAArB,CAAX,CAJA,CAOA;;AACAZ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEV,gBADD;AAELW,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR;AAIH,GAZD,CAYE,OAAOV,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAET,eADD;AAELU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaU;AAFjB,KAAD,CAAR;AAIH;AACJ,CAnBM,C,CAqBP;;AACA,OAAO,MAAMlB,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHK,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { GET_DEVELOPER, ADD_DEVELOPER, DELETE_DEVELOPER, DEVELOPER_ERROR, SET_LOADING } from './types';\n\n// Action to get developers\nexport const getDevelopers = () => async dispatch =>  {\n    try {\n        // Set Loading To True\n        setLoading();\n        // Fetch from api\n        const res = await fetch('/developer');\n        const data = await res.json();\n        // Dispatch\n        dispatch({\n            type: GET_DEVELOPER,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: DEVELOPER_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Action to add a developer\nexport const addDeveloper = (developer) => async dispatch =>  {\n    try {\n        // Set Loading To True\n        setLoading();\n        // Fetch from api\n        const res = await fetch('/developer', {\n            method: 'POST',\n            body: JSON.stringify(developer),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n        // Dispatch\n        dispatch({\n            type: ADD_DEVELOPER,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: DEVELOPER_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Action to delete a developer\nexport const deleteDeveloper = (id) => async dispatch =>  {\n    try {\n        // Set Loading To True\n        setLoading();\n        // Fetch from api\n        await fetch(`/developer/${id}`, {\n            method: 'DELETE'\n        });\n        // Dispatch\n        dispatch({\n            type: DELETE_DEVELOPER,\n            payload: id\n        })\n    } catch (err) {\n        dispatch({\n            type: DEVELOPER_ERROR,\n            payload: err.response.msg\n        })\n    }\n};\n\n// Set Loading To True\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING\n    }\n}"]},"metadata":{},"sourceType":"module"}