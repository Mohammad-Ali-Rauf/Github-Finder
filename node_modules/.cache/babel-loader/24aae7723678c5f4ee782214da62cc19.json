{"ast":null,"code":"var _jsxFileName = \"/home/mohammadali/github-finder/src/context/github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GithubState = props => {\n  _s();\n\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState); // Search Users\n  // Get User\n  // Get Repos\n  // Clear Users\n  // Set Loading\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    children: [\" value=\", {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    }, props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/home/mohammadali/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,EAAiDC,QAAjD,EAA2DC,SAA3D,QAA4E,UAA5E;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CAApC,CARyB,CAUzB;AACA;AACA;AACA;AACA;;AAEA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAA,0BAAgC;AAAEC,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAf;AAAsBC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAAlC;AAAwCC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAArD;AAA4DC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAA3E,KAAhC,EACFL,KAAK,CAACQ,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAnBD;;GAAMT,W;;KAAAA,W;AAqBN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    // Get User\n    // Get Repos\n    // Clear Users\n    // Set Loading\n\n    return <GithubContext.Provider> value={{ users: state.users, user: state.user, repos: state.repos, loading: state.loading }}\n        {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}