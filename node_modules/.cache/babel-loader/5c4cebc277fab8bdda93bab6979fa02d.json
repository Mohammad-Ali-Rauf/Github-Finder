{"ast":null,"code":"var _jsxFileName = \"/home/mohammadali/github-finder/src/components/users/Users.js\";\nimport React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  // Check if loading or not and return spinner or user items\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  } else {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: userStyle,\n    children: users.map(user => /*#__PURE__*/_jsxDEV(UserItem, {\n      user: user\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Users;\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n};\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/mohammadali/github-finder/src/components/users/Users.js"],"names":["React","UserItem","Spinner","Users","users","loading","userStyle","map","user","id","display","gridTemplateColumns","gridGap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAClC;AACA,MAAGA,OAAH,EAAW;AACP,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,CAEN;;AAED,sBACI;AAAK,IAAA,KAAK,EAAEC,SAAZ;AAAA,cACKF,KAAK,CAACG,GAAN,CAAWC,IAAI,iBACZ,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAfD;;KAAMN,K;AAiBN,MAAMG,SAAS,GAAG;AACdI,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,mBAAmB,EAAE,gBAFP;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAMA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\n\nconst Users = ({ users, loading }) => {\n    // Check if loading or not and return spinner or user items\n    if(loading){\n        return <Spinner />\n    } else {\n\n    }\n\n    return (\n        <div style={userStyle}>\n            {users.map( user => (\n                <UserItem key={user.id} user={user} />\n            ))}\n        </div>\n    )\n}\n\nconst userStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gridGap: '1rem'\n};\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}