{"ast":null,"code":"var _jsxFileName = \"/home/mohammadali/github-finder/src/components/users/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  _s();\n\n  const [text, setText] = useState(''); // This method is used to dynamically update state whenever text input changes in the search form\n\n  const onChange = e => setText(e.target.value); // This method is used to submit the form\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter a username', 'light');\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Search Users\",\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Search\",\n        className: \"btn btn-dark btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), showClear && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearUsers,\n      className: \"btn btn-light btn-block\",\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Search;\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/mohammadali/github-finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","onChange","e","target","value","onSubmit","preventDefault","props","state","setState","propTypes","func","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAqCC,EAAAA;AAArC,CAAD,KAAqD;AAAA;;AAEhE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAFgE,CAIhE;;AACA,QAAMS,QAAQ,GAAGC,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7B,CALgE,CAOhE;;;AACA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAGP,IAAI,KAAG,EAAV,EAAc;AACVD,MAAAA,QAAQ,CAAC,yBAAD,EAA4B,OAA5B,CAAR;AACH,KAFD,MAEO;AACH,WAAKS,KAAL,CAAWZ,WAAX,CAAuB,KAAKa,KAAL,CAAWT,IAAlC;AACA,WAAKU,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH;AACJ,GARD;;AAUA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEM,QAAhB;AAA0B,MAAA,SAAS,EAAC,MAApC;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC,cAA3C;AACI,QAAA,KAAK,EAAEN,IADX;AAEI,QAAA,QAAQ,EAAEE;AAFd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKL,SAAS,iBACN;AAAQ,MAAA,OAAO,EAAEC,UAAjB;AAA6B,MAAA,SAAS,EAAC,yBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhCD;;GAAMH,M;;KAAAA,M;AAkCNA,MAAM,CAACgB,SAAP,GAAmB;AACff,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADb;AAEff,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFZ;AAGfhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,IAAV,CAAeD,UAHX;AAIfd,EAAAA,QAAQ,EAAEL,SAAS,CAACkB,IAAV,CAAeC;AAJV,CAAnB;AAOA,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nconst Search = ({ searchUsers, showClear, clearUsers,setAlert }) => {\n\n    const [text, setText] = useState('');\n\n    // This method is used to dynamically update state whenever text input changes in the search form\n    const onChange = e => setText(e.target.value);\n\n    // This method is used to submit the form\n    const onSubmit = e => {\n        e.preventDefault();\n        if(text==='') {\n            setAlert('Please enter a username', 'light')\n        } else {\n            this.props.searchUsers(this.state.text);\n            this.setState({ text: '' });\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className=\"form\">\n                <input type=\"text\" name=\"text\" placeholder=\"Search Users\"\n                    value={text}\n                    onChange={onChange}\n                />\n                <input type=\"submit\" value=\"Search\" className=\"btn btn-dark btn-block\" />\n            </form>\n            {showClear && (\n                <button onClick={clearUsers} className=\"btn btn-light btn-block\">Clear</button>\n            )}\n        </div>\n    )\n}\n\nSearch.propTypes = {\n    searchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}